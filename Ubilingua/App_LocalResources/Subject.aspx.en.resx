<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="abandCurso.OnClientClick" xml:space="preserve">
    <value>if (!confirm('Are you sure you want to drop out of the course?
')) return false;</value>
  </data>
  <data name="abandCurso.Text" xml:space="preserve">
    <value>Leave the course</value>
  </data>
  <data name="archivo.Text" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="archivoServidor.Text" xml:space="preserve">
    <value>File on the server</value>
  </data>
  <data name="audio.Text" xml:space="preserve">
    <value>Audio</value>
  </data>
  <data name="audioServidor.Text" xml:space="preserve">
    <value>Audio on the server</value>
  </data>
  <data name="añadirAdiv.Text" xml:space="preserve">
    <value>Add riddle</value>
  </data>
  <data name="añadirCuest.Text" xml:space="preserve">
    <value>Add questionnaire</value>
  </data>
  <data name="añadirDesc.Text" xml:space="preserve">
    <value>Add downloadable resource</value>
  </data>
  <data name="añadirImg.Text" xml:space="preserve">
    <value>Add image</value>
  </data>
  <data name="añadirTarea.Text" xml:space="preserve">
    <value>Add task</value>
  </data>
  <data name="añadirTema.Text" xml:space="preserve">
    <value>Add unit</value>
  </data>
  <data name="añadirTexto.Text" xml:space="preserve">
    <value>Add text</value>
  </data>
  <data name="añadirVideo.Text" xml:space="preserve">
    <value>Add video</value>
  </data>
  <data name="borrarRecurso.OnClientClick" xml:space="preserve">
    <value>if (!confirm('Are you sure you want to delete?
')) return false;</value>
  </data>
  <data name="cambiarContraseña.Text" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="contraseña.Text" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="cursoVacio.Text" xml:space="preserve">
    <value>Empty course</value>
  </data>
  <data name="descripcion.Text" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="editarAdiv.Text" xml:space="preserve">
    <value>Edit riddle</value>
  </data>
  <data name="editarCuest.Text" xml:space="preserve">
    <value>Edit questionnaire</value>
  </data>
  <data name="editarCurso.Text" xml:space="preserve">
    <value>Edit course name</value>
  </data>
  <data name="editarDesc.Text" xml:space="preserve">
    <value>Edit downloadable resource</value>
  </data>
  <data name="editarImg.Text" xml:space="preserve">
    <value>Edit image</value>
  </data>
  <data name="editarTarea.Text" xml:space="preserve">
    <value>Edit task</value>
  </data>
  <data name="editarTema.Text" xml:space="preserve">
    <value>Edit unit</value>
  </data>
  <data name="editarTexto.Text" xml:space="preserve">
    <value>Edit text</value>
  </data>
  <data name="editarVideo.Text" xml:space="preserve">
    <value>Edit video</value>
  </data>
  <data name="eliminarCurso.OnClientClick" xml:space="preserve">
    <value>if (!confirm('Are you sure you want to delete?
')) return false;</value>
  </data>
  <data name="eliminarCurso.Text" xml:space="preserve">
    <value>Delete course</value>
  </data>
  <data name="enlace.Text" xml:space="preserve">
    <value>Link</value>
  </data>
  <data name="fechaEntrega.Text" xml:space="preserve">
    <value>Submission date</value>
  </data>
  <data name="hacerPrivado.Text" xml:space="preserve">
    <value>Make the course private</value>
  </data>
  <data name="hacerPublico.OnClientClick" xml:space="preserve">
    <value>if (!confirm('Are you sure you want to make the course public?
')) return false;</value>
  </data>
  <data name="hacerPublico.Text" xml:space="preserve">
    <value>Make the course public</value>
  </data>
  <data name="imagen.Text" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="nombre.Text" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="nuevaContraseña.Text" xml:space="preserve">
    <value>New password</value>
  </data>
  <data name="nuevoArchivo.Text" xml:space="preserve">
    <value>New file</value>
  </data>
  <data name="solucion.Text" xml:space="preserve">
    <value>Answer</value>
  </data>
  <data name="traduccion.Text" xml:space="preserve">
    <value>Translation</value>
  </data>
  <data name="transcAudio.Text" xml:space="preserve">
    <value>Audio transcription</value>
  </data>
  <data name="validArchivo.ErrorMessage" xml:space="preserve">
    <value>File field required</value>
  </data>
  <data name="validAudio.ErrorMessage" xml:space="preserve">
    <value>Audio file required</value>
  </data>
  <data name="validAudioForm.ErrorMessage" xml:space="preserve">
    <value>Void audio format</value>
  </data>
  <data name="validContr.Text" xml:space="preserve">
    <value>Password field required</value>
  </data>
  <data name="validDesc.ErrorMessage" xml:space="preserve">
    <value>Description field required</value>
  </data>
  <data name="validEnlace.ErrorMessage" xml:space="preserve">
    <value>Link field required</value>
  </data>
  <data name="validFecha.ErrorMessage" xml:space="preserve">
    <value>Date field required</value>
  </data>
  <data name="validImg.ErrorMessage" xml:space="preserve">
    <value>Void image format</value>
  </data>
  <data name="validNombre.ErrorMessage" xml:space="preserve">
    <value>Name field required</value>
  </data>
  <data name="validSolucion.ErrorMessage" xml:space="preserve">
    <value>Answer field required</value>
  </data>
  <data name="validTexto.ErrorMessage" xml:space="preserve">
    <value>Text field required</value>
  </data>
  <data name="validYoutube.Text" xml:space="preserve">
    <value>The video must be from YouTube</value>
  </data>
  <data name="verCalif.Text" xml:space="preserve">
    <value>View qualifications</value>
  </data>
</root>